import{_ as E,c as d,I as s,w as i,j as h,a as t,a4 as l,D as k,o as r}from"./chunks/framework.B3JbQOJi.js";const R=JSON.parse('{"title":"Shadcn Button","description":"","frontmatter":{"title":"Shadcn Button"},"headers":[],"relativePath":"components/2024.1.1/button.md","filePath":"components/2024.1.1/button.md","lastUpdated":1729050668000}'),g={name:"components/2024.1.1/button.md"},o=h("h1",{id:"introduction",tabindex:"-1"},[t("Introduction "),h("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),y=h("p",null,"This document is mainly used to describe some features and usage of the ShadcnButton component.",-1),c=h("h2",{id:"type",tabindex:"-1"},[t("Type "),h("a",{class:"header-anchor",href:"#type","aria-label":'Permalink to "Type"'},"​")],-1),u=l("",2),F=l("",2),B=l("",2),_=l("",2),C=l("",2),m=l("",2),A=l("",2),S=l("",2),D=h("br",null,null,-1),b=h("br",null,null,-1);function q(f,T,v,z,I,P){const a=k("ShadcnButton"),n=k("CodeRunner"),p=k("ShadcnIcon"),e=k("ApiTable");return r(),d("div",null,[o,y,c,s(n,{title:"Button Type",description:"Create buttons of different styles by setting type, not setting it to the default style."},{default:i(()=>[s(a,{type:"primary"},{default:i(()=>[t("Primary")]),_:1}),s(a,{type:"success"},{default:i(()=>[t("Success")]),_:1}),s(a,{type:"warning"},{default:i(()=>[t("Warning")]),_:1}),s(a,{type:"danger"},{default:i(()=>[t("Danger")]),_:1}),s(a,{type:"info"},{default:i(()=>[t("Info")]),_:1}),s(a,{type:"text"},{default:i(()=>[t("Text")]),_:1})]),_:1}),u,s(n,{title:"Button Size",description:"Create buttons of different sizes by setting size, not setting it to the default size."},{default:i(()=>[s(a,{size:"small"},{default:i(()=>[t("Small")]),_:1}),s(a,{size:"default"},{default:i(()=>[t("Default")]),_:1}),s(a,{size:"large"},{default:i(()=>[t("Large")]),_:1})]),_:1}),F,s(n,{title:"Button Icon",description:"Create buttons with icons."},{default:i(()=>[s(a,null,{icon:i(()=>[s(p,{icon:"Save"})]),default:i(()=>[t(" Icon ")]),_:1}),s(a,{type:"success"},{icon:i(()=>[s(p,{icon:"Save"})]),default:i(()=>[t(" Icon + Type ")]),_:1}),s(a,{type:"success",size:"small"},{icon:i(()=>[s(p,{icon:"Save"})]),default:i(()=>[t(" Icon + Type + Size ")]),_:1})]),_:1}),B,s(n,{title:"Button Rounded",description:"Create buttons with rounded corners."},{default:i(()=>[s(a,{round:""},{default:i(()=>[t("Round")]),_:1}),s(a,{type:"danger",round:""},{default:i(()=>[t("Round + Type")]),_:1}),s(a,{type:"success",size:"small",round:""},{default:i(()=>[t("Round + Type + Size")]),_:1})]),_:1}),_,s(n,{title:"Button Disabled",description:"Create disabled buttons."},{default:i(()=>[s(a,{disabled:""},{default:i(()=>[t("Disabled")]),_:1}),s(a,{type:"danger",disabled:""},{default:i(()=>[t("Disabled + Type")]),_:1}),s(a,{type:"success",size:"small",disabled:""},{default:i(()=>[t("Disabled + Type + Size")]),_:1})]),_:1}),C,s(n,{title:"Button Circle",description:"Create circle buttons."},{default:i(()=>[s(a,{circle:""}),s(a,{type:"danger",circle:""}),s(a,{type:"success",size:"small",circle:""})]),_:1}),m,s(n,{title:"Button Loading",description:"Create loading buttons."},{default:i(()=>[s(a,{loading:""},{default:i(()=>[t("Loading")]),_:1}),s(a,{type:"success",loading:""},{default:i(()=>[t("Loading + Type")]),_:1}),s(a,{type:"success",size:"small",loading:""},{default:i(()=>[t("Loading + Type + Size")]),_:1})]),_:1}),A,s(n,{title:"Button Color",description:"Create buttons with different colors."},{default:i(()=>[s(a,{color:"red"},{default:i(()=>[t("Red")]),_:1}),s(a,{type:"danger",color:"red"},{default:i(()=>[t("Red + Type")]),_:1}),s(a,{type:"success",size:"small",color:"red"},{default:i(()=>[t("Red + Type + Size")]),_:1})]),_:1}),S,s(e,{title:"Button Props",headers:["Attribute","Description","Type","Default Value","List"],columns:[["text","Button text","String","-","-"],["size","Button size","Enum","default","small, default, large"],["type","Button type","Enum","primary","primary, success, warning, danger, info, text"],["round","Whether to add surrounding fillets","Boolean","false","-"],["circle","Whether to create a circle button","Boolean","false","-"],["loading","Whether to display loading","Boolean","false","-"],["color","Custom colors, supports all colors, and automatically calculates the color difference such as hover used","String","-","All supported color values"]]}),D,s(e,{title:"Button Events",headers:["Event","Description","Callback Parameters"],columns:[["click","Click event","event"]]}),b,s(e,{title:"Button Slots",headers:["Slot","Description"],columns:[["default","Button text slot"],["icon","Icon slot"],["loading","Loading slot"]]})])}const V=E(g,[["render",q]]);export{R as __pageData,V as default};
